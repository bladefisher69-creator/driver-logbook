version: '3.8'

services:
  db:
    image: mysql:8.0
    container_name: driver_logbook_db
    restart: always
    environment:
      MYSQL_DATABASE: ${DB_NAME:-driver_logbook}
      MYSQL_USER: ${DB_USER:-logbook_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-logbook_password}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-root_password}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: driver_logbook_backend
    restart: always
    command: >
      sh -c "
        python manage.py migrate &&
        python manage.py collectstatic --no-input &&
        python manage.py runserver 0.0.0.0:8000
      "
    environment:
      - DEBUG=${DEBUG:-True}
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY:-django-insecure-change-this-in-production}
      - DB_NAME=${DB_NAME:-driver_logbook}
      - DB_USER=${DB_USER:-logbook_user}
      - DB_PASSWORD=${DB_PASSWORD:-logbook_password}
      - DB_HOST=db
      - DB_PORT=3306
      - ALLOWED_HOSTS=${ALLOWED_HOSTS:-*}
      - CORS_ALLOWED_ORIGINS=${CORS_ALLOWED_ORIGINS:-http://localhost:5173,http://localhost:80}
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy

  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: driver_logbook_frontend
    restart: always
    ports:
      - "80:80"
    depends_on:
      - backend
    environment:
      - VITE_API_BASE_URL=http://localhost:8000/api

volumes:
  mysql_data:
