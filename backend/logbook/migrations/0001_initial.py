# Generated by Django 5.2.7 on 2025-10-16 18:20

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('license_number', models.CharField(max_length=50, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20)),
                ('is_admin', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, related_name='driver_set', to='auth.group')),
                ('user_permissions', models.ManyToManyField(blank=True, related_name='driver_set', to='auth.permission')),
            ],
            options={
                'db_table': 'drivers',
                'ordering': ['-created_at'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Trip',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehicle_id', models.CharField(max_length=50)),
                ('origin', models.CharField(max_length=255)),
                ('destination', models.CharField(max_length=255)),
                ('pickup_lat', models.FloatField(blank=True, null=True)),
                ('pickup_lng', models.FloatField(blank=True, null=True)),
                ('destination_lat', models.FloatField(blank=True, null=True)),
                ('destination_lng', models.FloatField(blank=True, null=True)),
                ('distance', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('start_time', models.DateTimeField()),
                ('end_time', models.DateTimeField(blank=True, null=True)),
                ('pickup_time', models.DecimalField(decimal_places=2, default=Decimal('1'), max_digits=4)),
                ('dropoff_time', models.DecimalField(decimal_places=2, default=Decimal('1'), max_digits=4)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('in_progress', 'In Progress'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trips', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'trips',
                'ordering': ['-start_time'],
            },
        ),
        migrations.CreateModel(
            name='LocationUpdate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lat', models.FloatField()),
                ('lng', models.FloatField()),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('speed', models.FloatField(blank=True, null=True)),
                ('recorded_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='location_updates', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='logbook.trip')),
            ],
            options={
                'db_table': 'location_updates',
                'ordering': ['-recorded_at'],
            },
        ),
        migrations.CreateModel(
            name='FuelLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fuel_type', models.CharField(choices=[('diesel', 'Diesel'), ('gasoline', 'Gasoline'), ('electric', 'Electric'), ('hybrid', 'Hybrid')], default='diesel', max_length=20)),
                ('fuel_amount', models.DecimalField(decimal_places=2, help_text='Gallons', max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('fuel_cost', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('odometer_reading', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('location', models.CharField(max_length=255)),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuel_logs', to=settings.AUTH_USER_MODEL)),
                ('trip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='fuel_logs', to='logbook.trip')),
            ],
            options={
                'db_table': 'fuel_logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='ComplianceReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_start', models.DateField()),
                ('date_end', models.DateField()),
                ('total_hours', models.DecimalField(decimal_places=2, max_digits=6)),
                ('total_miles', models.DecimalField(decimal_places=2, max_digits=10)),
                ('trip_count', models.IntegerField(default=0)),
                ('limit_exceeded', models.BooleanField(default=False)),
                ('refuel_violations', models.IntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('generated_at', models.DateTimeField(auto_now_add=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='compliance_reports', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'compliance_reports',
                'ordering': ['-generated_at'],
                'indexes': [models.Index(fields=['driver', 'date_start', 'date_end'], name='compliance__driver__c3bd90_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['driver', 'status'], name='trips_driver__f38efc_idx'),
        ),
        migrations.AddIndex(
            model_name='trip',
            index=models.Index(fields=['start_time'], name='trips_start_t_005982_idx'),
        ),
        migrations.AddIndex(
            model_name='locationupdate',
            index=models.Index(fields=['trip', 'recorded_at'], name='location_up_trip_id_b458a3_idx'),
        ),
        migrations.AddIndex(
            model_name='locationupdate',
            index=models.Index(fields=['driver', 'recorded_at'], name='location_up_driver__2b5773_idx'),
        ),
        migrations.AddIndex(
            model_name='fuellog',
            index=models.Index(fields=['driver', 'timestamp'], name='fuel_logs_driver__088020_idx'),
        ),
    ]
